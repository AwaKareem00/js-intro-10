


07-22-2024 JS Operators & Numbers Intro

RECAP: 

assignment, arithmetic calculation, comparison, logical

Arithmetic: +, -, /, *, **, %, ++, --
Assignment: =, +=, -=, /=, *=, **=


/////////////////////////////////////////
Comparison operators:
All the comparison operators returns a boolean which is true or false
let x = 5, y = 10, z = '5'

console.log(x == z); // true
console.log(x === z); // false

console.log(x !x y); // true
console.log(x != z); // flase
console.log(x !== z); // true

console.log(x > z); // false
console.log(x < y); // true 

console.log(y >= (2 * 5)); // true
consol.log(x <= 5); // true

LOGICAL OPERATORS:
&& logical and
|| logical or
!  logical no


3 > 1 && 1 > 10         False

true && true            true
true && false           false
false && false          false

Valid Username && Valid Password        True

1 === 1 || !false       true
2 == 3 || 5 < 10        true

1 == 1 || 2 < 3         true
1 != 1 || 2 > 5         false

// WHEN YOU HAVE && BOTH MUST BE TRUE TO = TRUE
// WHEN YOU HAVE || OBLY ONE MUST BE TRUE TO = TRUE

FALSY
0
''      -> empty string
False
null
undefined
NaN 

Any other values except for the falsy ones are truthy
when something is 0 it is always zero and anything higher its true

____ && ____
____ || ____

'hello' && 'hi'



NOT OPERATORS
!false      = true
!true       = false

!(true || 1 > 0 || 5 == '5' || ! false)      -> false

nullish coalescing operator (??) 

null vs undefined

null: abscense of data
let var1 = null;

undefined: declared but not assigned any value
let var2;



JS has a built in number object which has many useful properties and functions
properties: information about the object (what it has)
funstions or methods: behaviors of the object (what it does)



























